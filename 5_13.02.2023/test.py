#f = open(r"D:\python\KirillStatkevich\leson13.02.2023\test.txt", 'r')#первая r roll сырой, пропускает все командные функции
f = open("leson13.02.2023/test.txt", 'r')#в обьемной директории необходимо дополнительно указать путь через обычный слэш
text=f.read()
print(text)
#r -чтение, не для больших обьемов информации
#w - запись(создает новый файл) и удаляет предыдущие данные
#a- добавление в существующий файл, либо создает новый
# t режим для работы с текстовыми файлами
#b бинарный режим
# + - дополнительный режим чтения.записи
# внутренние пути компуктера не стоит использовать так как нет на других компухтерах такого пути
print(type(f), print(f))
f.close()#каждый раз закрываем файлик ибо будет недоступен другим
with open ("leson13.02.2023/test.txt", 'r') as f:# синтаксис который закрывает ссылку на файл как только закончится вся внутрення конструкция файлика
    #т.е. пишем все здесь до принта и не надо после этого писать close и в начале писать open
    print(f.read())
#w
with open ("leson13.02.2023/test.txt", 'w') as f:#чистит файл
    f.write("new text from w mode")#добавляет эту строку в файл \n так же работает
    f.write(", and another text\n")# добавили еще одну строку 
    f.writelines(["line1\n","line2\n","line3"])#пишет строку с переносом текста на другую строку, для переноса необходимо указывать \n
#r
with open("leson13.02.2023/test.txt", 'r') as f:#f-это автомаически созданный итератор
    for line in f:#способ получить все строки из текстого файлика
        print(line)
    # x=f.readlines()#выводит текст как repr и очень удобно для функции writelines
    # print(x)
    #print(f.readline())#позволяет построчно читать каждую строку
    #print(f.read(10))# позволяет читать текст по кусочкам(chunk)
    # print(f.read())# команда работает один раз, так как курсов переходит в конец
    # f.seek(0)# позволяет прочитать текст по новому перенося курсор в указанный символ
    # print(repr(f.read()))#repr дословное представление обектов включая управляющие символы
#a
with open("leson13.02.2023/test.txt", 'a') as f:#по умолчанию пишет в конце файла
    f.seek(0)#не работает здесь но можно выкрутиться(ниже)
    f.write("\nappended text")#добавил строчку в конец файлика
with open("leson13.02.2023/test.txt", 'a+') as f:
    f.seek(0)#не позволяет добавить текст в начало так как приоритет стоит на операцию
    f.write("\nappended text")
    f.seek(0)#однако позволяет прочитать текст с 0 отметки
    f.read
#f+
with open("leson13.02.2023/test.txt", 'r+') as f:
    f.write("new text from r+") #позволяет писать повер предыдущего текста
    #!!! нет возможности писать вначало или в середину, только перезапись
    print(f.read())#будет читать с того момента где остановился курсор
#w+
# with open("leson13.02.2023/test.txt", 'w+') as f:
#     f.write("new text from w+")#удаляет все данные 
#     f.seek(0)#переопределяет курсор на 0 положение
#     f.write("test ")#добавляет строку текст с 0 позиции
#     print(f.read()) #читает текст 